Design pattern: https://addyosmani.com/resources/essentialjsdesignpatterns/book/

CDN:CONNECT DELIVERY NETWORK
Most of the times we will use google CDN
All CDN links:https://cdnjs.com/libraries

ANGUALRJS RENDERING STEPS:

When Angular starts your application, it parses and processes this new markup from the template using the compiler. The loaded, transformed and rendered DOM is basically the view
1.HTML is parsed into DOM tree
2.DOM tree is converted to a render tree
3.Layout
4.Paint

Scope is an object that refers to the application model. It is an execution context for expressions.

COMPILER:
Compiler is an AngularJS service which traverses the DOM looking for attributes. The compilation process happens in two phases.
Compile: traverse the DOM and collect all of the directives. The result is a linking function.
Link: combine the directives with a scope and produce a live view. Any changes in the scope model are reflected in the view, and any user interactions with the view are reflected in the scope model. This makes the scope model the single source of truth.


*Directive : https://www.3pillarglobal.com/insights/angularjs-understanding-directive-scope
	     https://www.3pillarglobal.com/insights/angularjs-understanding-custom-directive#comment-123026
	     https://dzone.com/articles/angularjs-10-best-practices
	     https://thinkster.io/directive-to-directive-communication	
  Directives execution:http://stackoverflow.com/questions/16071676/order-of-execution-of-directive-functions-in-angularjs		

*eventlisteners :http://codepen.io/gpincheiraa/pen/xOZwqa &&
		 http://stackoverflow.com/questions/14502006/working-with-scope-emit-and-on

*Ng-messages:https://scotch.io/tutorials/angularjs-form-validation-with-ngmessages &&
	    https://scotch.io/tutorials/angularjs-form-validation
            https://docs.angularjs.org/api/ngMessages

*RouteParams:http://viralpatel.net/blogs/angularjs-routing-and-views-tutorial-with-example/
	     https://www.bennadel.com/blog/2420-mapping-angularjs-routes-onto-url-parameters-and-client-side-events.htm	

*ng-transclude:http://stackoverflow.com/questions/15296284/understanding-the-transclude-option-of-directive-definition

*$eval:http://www.guru99.com/angularjs-expressions.html
	http://webiks.com/the-war-of-good-vs-eval-or-eval-vs-eval/
	https://docs.angularjs.org/guide/expression

*services:http://viralpatel.net/blogs/angularjs-service-factory-tutorial/
	http://www.dotnettricks.com/learn/angularjs/understanding-angularjs-factory-service-and-provider

*$timeout:https://benohead.com/when-to-use-timeout/

*$location:https://www.sitepoint.com/premium/books/angularjs-novice-to-ninja/preview/exploring-the-location-service-2f17ca5

*angular-UI-view:https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views
		https://scotch.io/tutorials/angular-routing-using-ui-router		

DIFFERENCES B/W:

1.$observer Vs $watch:http ://stackoverflow.com/questions/14876112/angularjs-difference-between-the-observe-and-watch-methods

2.$watch Vs $on :http://stackoverflow.com/questions/23561302/angular-js-watch-vs-on

3.scope Vs $scope:https://thinkster.io/a-better-way-to-learn-angularjs/scope-vs-scope
	
4.$evalAsync Vs $timeout:http://stackoverflow.com/questions/17301572/angularjs-evalasync-vs-timeout

5.services Vs factory:http://www.codelord.net/2015/04/28/angularjs-whats-the-difference-between-factory-and-service/
		      http://viralpatel.net/blogs/angularjs-service-factory-tutorial/
	              http://www.dotnettricks.com/learn/angularjs/understanding-angularjs-factory-service-and-provider
6.Bootstrap Vs angular-ui-bootstrap:http://stackoverflow.com/questions/35063868/what-is-the-core-difference-between-bootstrap-css-and-angularjs-ui-bootstrap	
7.call Vs apply:https://hangar.runway7.net/javascript/difference-call-apply
		https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call
BEST AUTHORS FOR ANGUALRJS:

1.viralpatel
2.http://www.techstrikers.com
3.https://www.w3schools.com
4.https://www.tutorialspoint.com

DIAGRAM REPRESENTATION OF MVC:
https://docs.angularjs.org/guide/concepts

FUNCTION DECLARATION TYPES:
 someFn();
 var someFn = function(...) {...} // is called function expression
 
 someFn();
 function someFn(...) {...} // is called function statement

*SocialNetworks CSS:
URL for refernce:https://lipis.github.io/bootstrap-social/
https://mdbootstrap.com/components/social-buttons/
CDN:https://cdnjs.cloudflare.com/ajax/libs/bootstrap-social/5.1.1/bootstrap-social.css

*All glypichons:
http://fontawesome.io/icons/
CDN:https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css

Youtube Videos socilaNetworkLogin:https://www.youtube.com/watch?v=M1CXN2DVxqY&feature=youtu.be

Bower install:
https://bower.io/docs/creating-packages/

karma setUp:
http://www.wilandrade.com/how-to-setup-karma-with-mocha-and-chai/